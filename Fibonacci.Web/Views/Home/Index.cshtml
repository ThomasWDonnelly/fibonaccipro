@model Fibonacci.Web.Models.IndexViewModel

@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>Fibonacci Pro</h1>
    <p class="lead">Fibonacci Pro calculates Fibonacci numbers from a user's input and offers a variety of different output formats.</p>
</div>

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Index", "Home", FormMethod.Post, new { @class = "form-inline" }))
        {
            @Html.ValidationSummary(true)

            <div class="form-group">

                @Html.LabelFor(model => model.InputValue, new { @class = "sr-only" })

                @Html.TextBoxFor(model => model.InputValue, new { @class = "form-control", placeholder = "Input value", value = "" })

                @Html.ValidationMessageFor(model => model.InputValue)

            </div>

            @*<button type="submit" class="btn btn-default" onclick="find();">Get Results</button>*@
            <input type="button" class="btn btn-default" value="Get Results" onclick="find();" />
        }
    </div>
</div>
@if (Model.InputValue > 0 && Model.Results != null && Model.Results.Any())
{
    <hr />
    <h1>Showing @Model.InputValue @(Model.InputValue > 1 ? "numbers" : "number") in the Fibonacci sequence.</h1>
    <div class="row">
        <div class="col-md-12">
            <ol id="results">
                @foreach (var result in Model.Results)
                {
                    <li>@result</li>
                }
            </ol>
        </div>
    </div>
}

@section scripts
{
    <script>
        var uri = 'api';

        function find() {
            var id = $(@Html.Raw(("'#" + Html.IdFor(model => model.InputValue) + "'"))).val();
            $.getJSON(uri + '/' + id)
                .done(function (data) {
                    // On success, 'data' contains a list of products.
                    $.each(data, function (key, item) {
                        // Add a list item for the product.
                        $('<li>', { text: item }).appendTo($('#results'));
                    });
                })
                .fail(function (jqXHR, textStatus, err) {
                    $('#results').text('Error: ' + err);
                });
        }
    </script>
}
